import{_ as n,c as t,a as s,e,d as a,b as h,w as p,r,o as m}from"./app-C1ZOz49-.js";const d={};function c(k,i){const l=r("VPLink");return m(),t("div",null,[i[5]||(i[5]=s("p",null,"一种具有动态相互学习功能的在线协同精炼（CORE）框架，其中网络和标签预测通过从其他对等网络中提取知识来在线协作优化。",-1)),i[6]||(i[6]=s("div",{style:{"text-align":"center"}},[s("p",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-19/202412191341410.png",alt:""})])],-1)),i[7]||(i[7]=s("hr",null,null,-1)),s("blockquote",null,[s("p",null,[i[1]||(i[1]=a("本文用于记录复现 ",-1)),h(l,{href:""},{default:p(()=>[...i[0]||(i[0]=[a("CORE",-1)])]),_:1}),i[2]||(i[2]=a(" 的实验过程和结果，代码见 ",-1)),i[3]||(i[3]=s("a",{href:"https://github.com/mangye16/ReID-Label-Noise",target:"_blank",rel:"noopener noreferrer"},"github仓库",-1)),i[4]||(i[4]=a("。",-1))])]),i[8]||(i[8]=e(`<h2 id="一、下载代码和数据集" tabindex="-1"><a class="header-anchor" href="#一、下载代码和数据集"><span>一、下载代码和数据集</span></a></h2><h3 id="_1-1-代码" tabindex="-1"><a class="header-anchor" href="#_1-1-代码"><span>1.1 代码</span></a></h3><p>找一个目录，这里我使用的是我 fork 的仓库（私密的，你也可以自建一个，方便查看修改记录）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://gitee.com/zzyAJohn/ajohn-core.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用下面命令可以输入一次账号密码后无需再次输入</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> credential.helper</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> store</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-2-数据集" tabindex="-1"><a class="header-anchor" href="#_1-2-数据集"><span>1.2 数据集</span></a></h3><p>克隆 <a href="https://github.com/layumi/Person_reID_baseline_pytorch.git" target="_blank" rel="noopener noreferrer">Person_reID_baseline_pytorch</a>，要用到里面的 <code>prepare.py</code> 来重命名数据集</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/layumi/Person_reID_baseline_pytorch.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下载 Market1501 数据集，是一个 <code>Market-1501-v15.09.15.zip</code> 文件，145MB</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> gdown</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --upgrade</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> gdown</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #!!important!!</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">gdown</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0B8-rUzbwVRk0c054eEozWG9COHM</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>wsl访问不了谷歌可以wins下<a href="https://drive.google.com/file/d/0B8-rUzbwVRk0c054eEozWG9COHM/view?resourcekey=0-8nyl7K9_x37HlQm34MmrYQ" target="_blank" rel="noopener noreferrer">下载</a></p><p>使用unzip解压</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> unzip</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">unzip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Market-1501-v15.09.15.zip</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Market-1501-v15.09.15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 <code>prepare.py</code> 中的 download_path2，不要修改 download_path，也不要创建download_path下的文件，下面函数会检查，download_path 是数据集的目标路径。如果该路径不存在，代码会尝试将另一个路径 download_path2 重命名为 download_path，以确保数据集存放在正确的位置。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark has-diff vp-code"><code class="language-py"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">download_path </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">../Market</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # Please not change.</span></span>
<span class="line diff remove"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">download_path2 </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">../Market-1501-v15.09.15</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # You only need to change this line to your dataset download path #</span></span>
<span class="line diff add"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">download_path2 </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">../Market-1501-v15.09.15/Market-1501-v15.09.15</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # You only need to change this line to your dataset download path #</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重命名数据集，会把所有图片移动到 Market\\pytorch 下</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> prepare.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>把 pytorch 重命名为 market</p><p>每个文件按照类别编号</p><p><img src="https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-17/202412171543711.png" alt=""></p><p>PS：我已经处理好的数据集，可以使用以下命令直接解压，等以后有空上传（</p><p>使用7zip解压</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> p7zip-full</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">7z</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> x</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> re-id-market.7z</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、环境配置" tabindex="-1"><a class="header-anchor" href="#二、环境配置"><span>二、环境配置</span></a></h2><details class="hint-container details"><summary>为了方便，我写了一个懒人脚本：</summary><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 创建 conda 环境</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.9</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 激活 conda 环境并安装依赖</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torch==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2.5.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchvision==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0.20.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchaudio==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2.5.0</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --index-url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查 CUDA 是否可用</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">import torch; print(torch.cuda.is_available())</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">开始安装其他依赖：</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tensorboardX</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scipy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> matplotlib</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> easydict</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> kornia</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ipykernel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">所有依赖项安装完成！</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以创建sh脚本执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">touch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core.sh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 复制进去保存</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./core.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>查看当前 cuda 版本</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nvcc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建已有环境（可选）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> env</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remove</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建环境</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.9</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>激活</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> core</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装 Pytorch <a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener noreferrer">参考Pytorch官网</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2.5.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchvision==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0.20.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchaudio==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2.5.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  pytorch-cuda=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">11.8</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nvidia</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者安装慢可以用清华源</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torch==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2.5.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchvision==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0.20.0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchaudio==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2.5.0</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --index-url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>检查 Pytorch 是否安装成功</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">import torch; print(torch.cuda.is_available())</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：<code>True</code></p><p>安装 core 所需依赖</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tensorboardX</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scipy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> matplotlib</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> easydict</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> kornia</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ipykernel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scikit-learn</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>管理员安装</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> libpython2.7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果遇到报错请参考 <a href="#%E5%9B%9B%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98">四、遇到的问题</a></p><h2 id="三、运行程序" tabindex="-1"><a class="header-anchor" href="#三、运行程序"><span>三、运行程序</span></a></h2><p>启动！1 个 epoch 需要 40 秒，150 个 epoch 接近 100 分钟。</p><p>注意后面路径是你 <code>train</code> 文件夹所在目录</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> train_core_zzy.py</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --dataset</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> re-id-market</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --batchsize</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 32</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --noise_ratio</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.2</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --lr</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.01</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --data_dir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../dataset/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="四、遇到的问题" tabindex="-1"><a class="header-anchor" href="#四、遇到的问题"><span>四、遇到的问题</span></a></h2><h3 id="_4-1-cython-扩展模块的编译与导入不匹配" tabindex="-1"><a class="header-anchor" href="#_4-1-cython-扩展模块的编译与导入不匹配"><span>4.1 Cython 扩展模块的编译与导入不匹配</span></a></h3><div class="hint-container caution"><p class="hint-container-title">ImportError: dynamic module does not define module export function (PyInit_cython_eval)</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">core</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> root@DESKTOP-5UQUCK2:/ajohn-lab-github/ReID-Label-Noise#</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> train_core.py</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --dataset</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> market</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --batchsize</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 32</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --noise_ratio</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.2</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --lr</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.01</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --pattern</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Traceback</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (most </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">recent</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> call</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> last</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">):</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  File</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/ajohn-lab-github/ReID-Label-Noise/train_core.py</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> line</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 28,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> in</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">modul</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    from</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> eval_utils</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> get_test_acc,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> extract_train_second_label</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  File</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/ajohn-lab-github/ReID-Label-Noise/eval_utils.py</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> line</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 8,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> in</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">modul</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    from</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> eval_lib.cython_eval</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> eval_market1501_wrap</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ImportError:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dynamic</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> module</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> does</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> not</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> define</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> module</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> export</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> function</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (PyInit_cython_eval)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>因为我们使用的是 python3.9，而 eval_lib 目录下只有 3.6 和 3.7 的编译的共享库。</p><p>进入 <code>eval_lib</code> 目录：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /ajohn-lab-github/ReID-Label-Noise/eval_lib</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 deadsnakes PPA，这个仓库提供了多个版本的 Python。</p><p>添加 deadsnakes PPA</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> software-properties-common</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add-apt-repository</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ppa:deadsnakes/ppa</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 Python 3.9 的开发包</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3.9</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3.9-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装 cython 和必要的编译工具</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cython</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build-essential</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3.9-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <code>setup.py</code> 重新编译扩展模块</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python3.9</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> setup.py</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build_ext</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --inplace</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在成功编译后，应该能看到生成了 eval.c 文件和 cython_eval.cpython-39-x86_64-linux-gnu.so 文件。</p><h2 id="五、梳理" tabindex="-1"><a class="header-anchor" href="#五、梳理"><span>五、梳理</span></a></h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h3><h4 id="任务" tabindex="-1"><a class="header-anchor" href="#任务"><span>任务：</span></a></h4><p>行人重识别（Re-ID）旨在匹配从不同摄像机获得的人员图像，这在计算机视觉研究和工业智能监控系统中发挥着重要作用。</p><h4 id="存在的问题" tabindex="-1"><a class="header-anchor" href="#存在的问题"><span>存在的问题：</span></a></h4><p>现有的行人重新识别（Re-ID）方法通常严重依赖大规模干净注释的训练数据。 然而，由于真实场景中的人物检测结果不准确或标注错误，标签噪声是不可避免的。 学习带有标签噪声的鲁棒 Re-ID 模型极具挑战性，因为每个身份的带注释训练样本非常有限。与图像分类任务相比，每个身份的训练样本非常有限，通常是数十到数千[11]。 因此，样本选择方法（图像分类中最流行的解决方案之一）不适合鲁棒的 Re-ID 任务，因为有限但信息丰富的人物图像可能会被错误地删除。</p><p>行人 Re-ID 中存在两种类型的标签噪声：</p><ol><li><p>样本噪声，行人图像/视频序列具有正确的身份标签，但图像包含由于检测不良/不准确的跟踪结果而导致的外围区域或异常视频帧，例如 被场景中的物体遮挡。 这个问题在文献中得到了广泛的研究。 例如，采用显着性和注意力模型来解决人物图像中的外围区域。 此外，一些方法还使用姿势/部分引导技术来处理局部杂乱区域。 对于基于视频的行人重新识别，提出了帧级重新加权和集合级特征学习来处理异常帧。</p></li><li><p>注释错误，人物图像被错误地注释为另一个身份，因为在冒名顶替者存在的情况下跨摄像机视图匹配人物即使对于人类来说也是具有挑战性的，并且在注释过程中不可避免地会出现错误。</p></li></ol><h4 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法：</span></a></h4><p>为了避免拟合噪声标签，我们建议<strong>在早期阶段使用大学习率和自标签细化策略来学习预模型</strong>，其中标签和网络联合优化。 为了进一步增强鲁棒性，我们引入了具有动态相互学习功能的在线协同精炼（CORE）框架，其中网络和标签预测通过从其他对等网络中提取知识来在线协作优化。 此外，它还使用有利的选择性一致性策略减少了噪声标签的负面影响。</p><p>在本文中，我们提出了一种新颖的在线标签协同精炼框架，用于在未知标签噪声下进行稳健的人员重新识别模型学习。 基于观察到使用大学习率的深度 Re-ID 模型学习会阻止在早期阶段拟合噪声标签，我们建议首先使用大学习率和自标签细化策略学习序言模型，该模型 逐步细化带注释的标签并共同优化网络。 我们的设计避免过滤掉有限但有价值的带注释的训练样本，同时重用噪声标签。 为了增强鲁棒性，我们提出了一种通过同时学习多个对等网络的选择性在线标签共同精炼（CORE）框架。 每个网络都使用其他网络的预测输出作为训练指导进行优化。 由于每个网络都是从不同的条件初始化的，因此它们会协作学习并同时匹配它们的估计概率。 由于网络和标签预测都是在线优化的，因此具有更好的通用性和更强的鲁棒性。 此外，还引入了选择性一致性正则化策略，以减少可能错误预测的样本的负面影响，进一步保证了鲁棒性。</p><p>CORE有两个主要优点：</p><ul><li>它对不同的噪声类型和未知的噪声比具有鲁棒性；</li><li>它可以轻松地进行训练，而无需在架构设计上做太多额外的工作。</li></ul><h4 id="核心思想" tabindex="-1"><a class="header-anchor" href="#核心思想"><span>核心思想：</span></a></h4><p>在早期阶段使用较大的学习率，逐步细化错误注释的样本</p><p>问题定义：本文研究了行人重识别任务中的标签噪声问题，解决了样本噪声和标注错误。 给定一组包含未知百分比和未知类型的标签噪声的训练数据，我们的目标是学习一个强大的 Re-ID 模型，该模型可以在存在标签噪声的情况下准确地区分不同的身份。 请注意，我们不依赖任何标签噪声分布假设[11]、[23]、[25]或附加的干净注释子集[27]、[46]。 由于每个身份的带注释的训练样本非常有限，我们的基本想法是基于第 IV 节中的观察，在第 III-B 节中学习的序言模型的基础上，在早期阶段使用较大的学习率，逐步细化错误注释的样本。</p><p>baseline: 我们采用广泛使用的分类模型 ID-discriminative Embedding (IDE) 作为我们的基线模型。 在训练过程中，通过将每个身份视为不同的类别，将行人Re-ID制定为图像分类任务，并采用softmax交叉熵损失来指导网络更新。 请注意，其他训练目标也可以在我们提出的方法中与最终的细化标签无缝配置，如表六所示。 在测试阶段，行人重识别被视为图像检索任务，其中学习网络是测试图像的特征提取器，并且采用余弦相似度作为相似度度量。</p><p>交叉熵损失(CE): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mi>b</mi></msub><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="script">C</mi></msubsup><mi>I</mi><mrow><mo fence="true">(</mo><mi>c</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mrow><mo fence="true">(</mo><mi>c</mi><mo>∣</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\\ell_{b}\\left(x_{i}\\right)=-\\sum_{c=1}^{\\mathcal{C}} I\\left(c, y_{i}\\right) \\log p\\left(c \\mid x_{i}\\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，其中yi代表样本xi的注释标签。由于yi可能不正确，直接最小化上述损失会导致对错误标记样本的过度拟合（如实验部分图4所示）。</p><h3 id="self-渐进式自我标签精炼" tabindex="-1"><a class="header-anchor" href="#self-渐进式自我标签精炼"><span>SELF：渐进式自我标签精炼</span></a></h3><p>在本小节中，我们介绍了具有渐进式自标签细化策略的序言模型学习，该策略共同细化带注释的标签并优化网络。 我们的基本想法源于观察，如第 IV-B 节中所讨论的，在早期阶段使用大学习率的深度 Re-ID 模型学习可以防止拟合错误标记的样本 [64]。 基于这一观察，我们假设以大学习率学习的序言模型具有预测输入样本的真实标签的能力。 因此，可以在后期使用学习到的序言模型执行标签细化，解决错误注释。 基于上述讨论，我们的渐进自标签精炼（SELF）方法使用大学习率联合优化被识别为模型的带注释标签和预测标签的概率。</p>`,92)),i[9]||(i[9]=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"normal"},"ℓ"),s("mi",null,"b")]),s("mrow",null,[s("mo",{fence:"true"},"("),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",{fence:"true"},")")]),s("mo",null,"="),s("mo",null,"−"),s("msubsup",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"c"),s("mo",null,"="),s("mn",null,"1")]),s("mi",{mathvariant:"script"},"C")]),s("mi",null,"I"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"c"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"y"),s("mi",null,"i")]),s("mo",{fence:"true"},")")]),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"p"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"c"),s("mo",null,"∣"),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",{fence:"true"},")")]),s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"normal"},"ℓ"),s("mi",null,"s")]),s("mrow",null,[s("mo",{fence:"true"},"("),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",{fence:"true"},")")])])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("msup",null,[s("mi",null,"w"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msub",null,[s("mi",{mathvariant:"normal"},"ℓ"),s("mi",null,"b")]),s("mo",null,"−"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mi",null,"w"),s("mi",null,"t")]),s("mo",{fence:"true"},")")]),s("mo",null,"⋅"),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"c"),s("mo",null,"="),s("mn",null,"1")]),s("mi",{mathvariant:"script"},"C")]),s("mi",null,"I"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"c"),s("mo",{separator:"true"},","),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"y"),s("mo",{stretchy:"true"},"^")]),s("mi",null,"i")]),s("mo",{fence:"true"},")")]),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"p"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"c"),s("mo",null,"∣"),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",{fence:"true"},")")])])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("msup",null,[s("mi",null,"w"),s("mi",null,"t")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",{mathvariant:"double-struck"},"E"),s("mrow",null,[s("mo",{fence:"true"},"("),s("msubsup",null,[s("mi",{mathvariant:"normal"},"ℓ"),s("mi",null,"b"),s("mrow",null,[s("mi",null,"t"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",{fence:"true"},")")])]),s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mi",{mathvariant:"double-struck"},"E"),s("mrow",null,[s("mo",{fence:"true"},"("),s("msubsup",null,[s("mi",{mathvariant:"normal"},"ℓ"),s("mi",null,"b"),s("mrow",null,[s("mi",null,"t"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",{fence:"true"},")")])])])])])])])])]),s("annotation",{encoding:"application/x-tex"},"\\ell_{b}\\left(x_{i}\\right)=-\\sum_{c=1}^{\\mathcal{C}} I\\left(c, y_{i}\\right) \\log p\\left(c \\mid x_{i}\\right)\\begin{aligned} \\ell_{s}\\left(x_{i}\\right) & =w^{t} \\cdot \\ell_{b}-\\left(1-w^{t}\\right) \\cdot \\sum_{c=1}^{\\mathcal{C}} I\\left(c, \\widehat{y}_{i}\\right) \\log p\\left(c \\mid x_{i}\\right) \\\\ w^{t} & =\\frac{\\mathbb{E}\\left(\\ell_{b}^{t-1}\\right)}{1+\\mathbb{E}\\left(\\ell_{b}^{t-1}\\right)} \\end{aligned}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"ℓ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"6.3839em","vertical-align":"-2.942em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∑"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9812em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"c"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathcal mtight",style:{"margin-right":"0.05834em"}},"C")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2997em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.442em"}},[s("span",{style:{top:"-5.442em"}},[s("span",{class:"pstrut",style:{height:"3.8283em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord"},"ℓ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")])])]),s("span",{style:{top:"-2.2806em"}},[s("span",{class:"pstrut",style:{height:"3.8283em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8436em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.942em"}},[s("span")])])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"3.442em"}},[s("span",{style:{top:"-5.442em"}},[s("span",{class:"pstrut",style:{height:"3.8283em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8436em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"ℓ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"(")]),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8436em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},")")])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.8283em"}},[s("span",{style:{top:"-1.8829em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"c"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.3em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathcal mtight",style:{"margin-right":"0.05834em"}},"C")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2671em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord accent"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6706em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")]),s("span",{class:"svg-align",style:{width:"calc(100% - 0.1111em)","margin-left":"0.1111em",top:"-3.4306em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{style:{height:"0.24em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"0.24em",viewBox:"0 0 1062 239",preserveAspectRatio:"none"},[s("path",{d:`M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1944em"}},[s("span")])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")])])]),s("span",{style:{top:"-2.2806em"}},[s("span",{class:"pstrut",style:{height:"3.8283em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.5942em"}},[s("span",{style:{top:"-2.2558em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathbb"},"E"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"(")]),s("span",{class:"mord"},[s("span",{class:"mord"},"ℓ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8542em"}},[s("span",{style:{top:"-2.3987em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])]),s("span",{style:{top:"-3.1031em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3013em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},")")])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.74em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathbb"},"E"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"(")]),s("span",{class:"mord"},[s("span",{class:"mord"},"ℓ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8542em"}},[s("span",{style:{top:"-2.3987em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])]),s("span",{style:{top:"-3.1031em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3013em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},")")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0942em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.942em"}},[s("span")])])])])])])])])])],-1)),i[10]||(i[10]=e('<p>其中 yi 表示模型的预测标签。 wt 是一个渐进递减的权重参数，由每个训练时期 t 的损失 b 监督。 这种自标签细化策略逐步增加标签细化部分的贡献并减轻对b的依赖。 请注意，自标签细化学习通过随着训练次数的增加而优化网络和预测标签而成为自训练过程。 这是因为几个时期后 b 变得非常小。 预测标签{ yi }的准确率逐渐提高，网络逐渐优化。</p><p><img src="https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-26/202412261353899.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-26/202412261342171.png" alt=""></p><h3 id="core-在线标签协同精炼" tabindex="-1"><a class="header-anchor" href="#core-在线标签协同精炼"><span>CORE：在线标签协同精炼</span></a></h3><p>为了进一步增强针对错误预测标签的鲁棒性，我们提出了一种在线协同精炼（CORE）框架，通过学习两组网络，如图 2 所示。我们通过从对等网络中提取模型输出来协作更新一个网络的标签，并同时匹配两个网络之间的估计概率。 以动态更新的方式，同时在线改进行人Re-ID模型和估计标签。</p><p>给定通过上述渐进式早期自标签细化（以大学习率训练）获得的两个预定义网络 f(θ1) 和 f(θ2)，我们使用 f(θ2) 的预测标签来指导训练过程 f(θ1)，以较小的学习率进行微调。</p><p>KL散度：衡量两个网络估计预测之间的差异</p><p>通过这种方式，每个网络通过使用来自其对等网络的细化标签优化自身来协作学习，同时将其概率分布与其他对等网络相匹配。 以协作学习的方式，网络和预测标签都在逐步改进。 该策略重新使用错误标记的样本，而不是过滤掉它们[12]、[13]。 所提出的 CORE 的另一个好处是它独立于基线方法，当配置强大的基线骨干时，性能可以进一步提高</p><p><img src="https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-19/202412191341410.png" alt=""></p><p>我们采用 ResNet50 作为我们的主干网络结构，因为它是最近 Re-ID 模型中使用最广泛的。 我们使用预先训练的 Blog-ImageNet 权重进行初始化。 我们在 pool5 层之后添加一个全连接层（维度为 512），后面是带有 ReLU 激活函数的批量归一化层，如[36]中所示。 采用随机裁剪和水平翻转进行数据增强。 首先将图像大小调整为288×144，然后随机裁剪为256×128，被馈送到网络中。 所有数据集上的训练批量大小均设置为 32。 我们采用SGD作为默认优化器，动量参数为0.9。 我们为前 20 个 epoch 设置了较大的学习率 0.1，用于带有自标签精炼的预模型学习，并为最后 40 个 epoch 将其衰减 0.1，以进行进一步的自精炼 (SELF) 或共同精炼 (CORE)。</p><h3 id="选择性在线标签联合精炼" tabindex="-1"><a class="header-anchor" href="#选择性在线标签联合精炼"><span>选择性在线标签联合精炼</span></a></h3><p>为了避免错误预测的负面影响，我们在 CORE 之上引入了自适应在线选择策略。 基本思想是，如果两个网络的预测一致，则该样本对整体学习功能的贡献应该被放大。</p><p>因此，采用选择性策略的 CORE 的总体损失函数定义为</p><h2 id="实验" tabindex="-1"><a class="header-anchor" href="#实验"><span>实验</span></a></h2><h3 id="数据集" tabindex="-1"><a class="header-anchor" href="#数据集"><span>数据集</span></a></h3><p>我们在三个公开的行人 Re-ID 数据集上进行了实验，包括 Market1501 [66]、DukeMTMC [43] 和 CUHK03 [67]。 Market1501数据集[66]包含1,501个带注释的身份，以及由6个不同相机捕获的32,668个边界框，其中边界框是由DPM检测器获得的[68]。 Duke-MTMC 数据集 [43] 是另一个大规模数据集，包含 8 个不同摄像机捕获的 1,404 个身份。 它总共包含 36,411 个手绘边界框，其中许多行人具有相似的外观。 CUHK03 数据集 [67] 包含来自两个不重叠相机的 1,467 个身份的约 14K 图像。 我们遵循[69]中描述的设置并使用检测到的版本进行评估。 三个数据集的统计数据总结在表I中。</p><h3 id="标签噪声的产生" tabindex="-1"><a class="header-anchor" href="#标签噪声的产生"><span>标签噪声的产生</span></a></h3><p>我们在三种不同的设置下进行实验[11]：</p><ol><li>随机噪声：随机选择一定比例（10％、20％和30％）的训练图像并分配来自其他身份的错误标签。</li><li>模式噪声：我们首先使用干净的标签训练ResNet50基线模型，然后将一定比例的随机选择的样本分配给来自另一个身份的最相似样本的标签[11]。 这个设定比较有挑战性。</li><li>标准设置：我们还使用原始“干净”标签评估性能，其中包含有限的噪声（∼0%）。</li></ol><h3 id="评估指标" tabindex="-1"><a class="header-anchor" href="#评估指标"><span>评估指标</span></a></h3><p>遵循现有的Re-ID工作[28]，我们采用rank-k匹配精度和平均精度（mAP）作为评估指标。 Rank-k 匹配准确度表示 top-k 检索结果中出现正确匹配的概率。 mAP 表示多个真实值的平均检索性能[66]。</p><h3 id="实施细节" tabindex="-1"><a class="header-anchor" href="#实施细节"><span>实施细节</span></a></h3><p>我们采用 ResNet50 [72] 作为我们的主干网络结构，因为它是最近 Re-ID 模型中使用最广泛的。 我们使用预先训练的 Blog-ImageNet 权重进行初始化。 我们在 pool5 层之后添加一个全连接层（维度为 512），后面是带有 ReLU 激活函数的批量归一化层，如[36]中所示。 采用随机裁剪和水平翻转进行数据增强。 首先将图像大小调整为288×144，然后随机裁剪为256×128被馈送到网络中。 所有数据集上的训练批量大小均设置为 32。 我们采用SGD作为默认优化器，动量参数为0.9。 我们为前 20 个 epoch 设置了较大的学习率 0.1，用于带有自标签精炼的预模型学习，并为最后 40 个 epoch 将其衰减 0.1，以进行进一步的自精炼 (SELF) 或共同精炼 (CORE)。</p>',23))])}const o=n(d,[["render",c]]),y=JSON.parse('{"path":"/article/dagep2xy/","title":"Collaborative Refining for Person Re-Identification With Label Noise","lang":"zh-CN","frontmatter":{"title":"Collaborative Refining for Person Re-Identification With Label Noise","tags":["Deep Learning","Re-ID","Python"],"createTime":"2024/12/17 13:47:32","permalink":"/article/dagep2xy/","description":"一种具有动态相互学习功能的在线协同精炼（CORE）框架，其中网络和标签预测通过从其他对等网络中提取知识来在线协作优化。 本文用于记录复现 的实验过程和结果，代码见 github仓库。 一、下载代码和数据集 1.1 代码 找一个目录，这里我使用的是我 fork 的仓库（私密的，你也可以自建一个，方便查看修改记录） 使用下面命令可以输入一次账号密码后无需再...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Collaborative Refining for Person Re-Identification With Label Noise\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-19/202412191341410.png\\",\\"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-17/202412171543711.png\\",\\"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-26/202412261353899.png\\",\\"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-26/202412261342171.png\\",\\"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-19/202412191341410.png\\"],\\"dateModified\\":\\"2025-10-28T11:44:01.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.ajohn.top/article/dagep2xy/"}],["meta",{"property":"og:site_name","content":"AJohn Blog"}],["meta",{"property":"og:title","content":"Collaborative Refining for Person Re-Identification With Label Noise"}],["meta",{"property":"og:description","content":"一种具有动态相互学习功能的在线协同精炼（CORE）框架，其中网络和标签预测通过从其他对等网络中提取知识来在线协作优化。 本文用于记录复现 的实验过程和结果，代码见 github仓库。 一、下载代码和数据集 1.1 代码 找一个目录，这里我使用的是我 fork 的仓库（私密的，你也可以自建一个，方便查看修改记录） 使用下面命令可以输入一次账号密码后无需再..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/zzyAJohn/Blog-Image/2024-12-19/202412191341410.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-28T11:44:01.000Z"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Re-ID"}],["meta",{"property":"article:tag","content":"Deep Learning"}],["meta",{"property":"article:modified_time","content":"2025-10-28T11:44:01.000Z"}]]},"readingTime":{"minutes":15.43,"words":4630},"git":{"createdTime":1734587141000,"updatedTime":1761651841000,"contributors":[{"name":"zzyAJohn","username":"zzyAJohn","email":"1833302139@qq.com","commits":9,"avatar":"https://avatars.githubusercontent.com/zzyAJohn?v=4","url":"https://github.com/zzyAJohn"}]},"autoDesc":true,"filePathRelative":"blog/深度学习/core.md","headers":[],"categoryList":[{"id":"8c5f70","sort":10001,"name":"深度学习"}]}');export{o as comp,y as data};
