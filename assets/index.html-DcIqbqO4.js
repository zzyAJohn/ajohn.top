import{_ as a,c as i,e as p,a as e,b as o,w as n,d as r,r as s,o as u}from"./app-C1ZOz49-.js";const m={};function d(f,t){const l=s("VPLink");return u(),i("div",null,[t[18]||(t[18]=p('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>目前CS61A已经开始下一个学期（Spring 2025），官方自己的存档需要UCB的账号才能访问，Fall 2024的一个备份可见 <a href="https://github.com/hqhq1025/cs61a-24fa-backup" target="_blank" rel="noopener noreferrer">hqhq1025</a> 的 <a href="https://hqhq1025.github.io/cs61a-24fa-backup/index.html" target="_blank" rel="noopener noreferrer">CS61A备份网站</a>。</p></div><hr><p>注：此简介搬运自 <a href="https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/Python/CS61A/" target="_blank" rel="noopener noreferrer">CS自学指南</a></p><p>课程简介</p><ul><li>所属大学：UC Berkeley</li><li>先修要求：无</li><li>编程语言：Python, Scheme, SQL</li><li>课程难度：🌟🌟🌟</li><li>预计学时：50 小时</li></ul><p>伯克利 CS61 系列的第一门课程，也是我的 Python 入门课。</p><p>CS61 系列是伯克利 CS 专业的入门课，其中：</p><ul><li>CS61A: 强调抽象，让学生掌握用程序来解决实际问题，而不关注底层的硬件细节。</li><li>CS61B: 注重算法与数据结构以及大规模程序的构建，学生会用 Java 语言结合算法与数据结构的知识来构建千行代码级别的大型项目（一个简易的谷歌地图，一个二维版的 Minecraft）。</li><li>CS61C: 关注计算机体系结构，让学生理解高级语言（例如 C）是如何一步步转换为机器可以理解的 01 串并在 CPU 执行的，学生将会学习 RISC-V 架构并自己用 Logisim 实现一个 CPU。</li></ul><p>回到 CS61A，注意这不仅仅是一门编程语言课，而是会深入到程序构造与运行的原理。最后你将在第 4 个 Project 中用 Python 实现一个 Scheme 的解释器。此外，抽象将是这门课的一大主题，你将学习到函数式编程、数据抽象、面向对象等等知识来让你的代码更易读，更模块化。当然，学习编程语言也是这门课的一大内容，你将会掌握 Python、Scheme 和 SQL 这三种编程语言，在它们的学习和比较中，相信你会拥有快速掌握一门新的编程语言的能力。</p><p>注意：如果此前完全没有编程基础，直接上手 CS61A 需要一定的学习能力和自律要求。为避免课程难度过高而导致的信心挫折，可以选择一个更为友好的入门编程课程。例如伯克利的 CS10 或者哈佛大学的 CS50。</p><p>课程资源</p><ul><li>课程网站: <a href="https://cs61a.org/" target="_blank" rel="noopener noreferrer">fall2024</a></li><li>课程视频: fall2022, fall2020</li><li><a href="https://www.composingprograms.com/" target="_blank" rel="noopener noreferrer">课程教材</a></li><li><a href="https://composingprograms.netlify.app/" target="_blank" rel="noopener noreferrer">课程教材中文翻译</a></li><li>课程作业: 课程网站会有每个作业对应的文档链接以及代码框架的下载链接。</li></ul><hr><p>本文主要记录学习 CS61A 课程的一些心得</p><p>因为是课程笔记，所以基础知识不再赘述，仅记录一些有意思的想法</p><p>实验，作业，项目可见本博客：</p><p>Lab:</p>',17)),e("ul",null,[e("li",null,[o(l,{href:"./lab/lab00.md"},{default:n(()=>[...t[0]||(t[0]=[r("Lab 0: Getting Started",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab01.md"},{default:n(()=>[...t[1]||(t[1]=[r("Lab 1: Functions",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab02.md"},{default:n(()=>[...t[2]||(t[2]=[r("Lab 2: Higher-Order Functions, Lambda Expressions",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab03.md"},{default:n(()=>[...t[3]||(t[3]=[r("Lab 3: Recursion, Python Lists",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab04.md"},{default:n(()=>[...t[4]||(t[4]=[r("Lab 4: Tree Recursion, Data Abstraction",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab05.md"},{default:n(()=>[...t[5]||(t[5]=[r("Lab 5: Mutability, Iterators",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab06.md"},{default:n(()=>[...t[6]||(t[6]=[r("Lab 6: OOP",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab07.md"},{default:n(()=>[...t[7]||(t[7]=[r("Lab 7: Inheritance, Linked Lists",-1)])]),_:1})]),e("li",null,[o(l,{href:"./lab/lab08.md"},{default:n(()=>[...t[8]||(t[8]=[r("Lab 8: Mutable Trees",-1)])]),_:1})])]),t[19]||(t[19]=e("p",null,"Homework:",-1)),e("ul",null,[e("li",null,[o(l,{href:"./homework/hw01.md"},{default:n(()=>[...t[9]||(t[9]=[r("Homework 1: Functions, Control",-1)])]),_:1})]),e("li",null,[o(l,{href:"./homework/hw02.md"},{default:n(()=>[...t[10]||(t[10]=[r("Homework 2: Higher-Order Functions",-1)])]),_:1})]),e("li",null,[o(l,{href:"./homework/hw03.md"},{default:n(()=>[...t[11]||(t[11]=[r("Homework 3: Recursion, Tree Recursion",-1)])]),_:1})]),e("li",null,[o(l,{href:"./homework/hw04.md"},{default:n(()=>[...t[12]||(t[12]=[r("Homework 4: Sequences, Data Abstraction, Trees",-1)])]),_:1})]),e("li",null,[o(l,{href:"./homework/hw05.md"},{default:n(()=>[...t[13]||(t[13]=[r("Homework 5: Generators",-1)])]),_:1})]),e("li",null,[o(l,{href:"./homework/hw06.md"},{default:n(()=>[...t[14]||(t[14]=[r("Homework 6: OOP, Linked Lists",-1)])]),_:1})])]),t[20]||(t[20]=e("p",null,"Project:",-1)),e("ul",null,[e("li",null,[o(l,{href:"./project/hog.md"},{default:n(()=>[...t[15]||(t[15]=[r("Project 1: Hog",-1)])]),_:1})]),e("li",null,[o(l,{href:"./project/cats.md"},{default:n(()=>[...t[16]||(t[16]=[r("Project 2: Cats",-1)])]),_:1})]),e("li",null,[o(l,{href:"./project/ants.md"},{default:n(()=>[...t[17]||(t[17]=[r("Project 3: Ants",-1)])]),_:1})])]),t[21]||(t[21]=e("p",null,[r("你也可以通过我的 github 仓库 "),e("a",{href:"https://github.com/zzyAJohn/CS61A_Fall2024",target:"_blank",rel:"noopener noreferrer"},"CS61A_Fall2024"),r("来获取我的代码。")],-1)),t[22]||(t[22]=e("div",{class:"hint-container important"},[e("p",{class:"hint-container-title"},"重要"),e("p",null,"请注意，该代码包含答案，因此如果你想独立完成请务必提前将对应 python 文件中的答案删除！")],-1)),t[23]||(t[23]=e("p",null,"END.",-1))])}const C=a(m,[["render",d]]),b=JSON.parse('{"path":"/cs61a/","title":"CS61A: Structure and Interpretation of Computer Programs","lang":"zh-CN","frontmatter":{"title":"CS61A: Structure and Interpretation of Computer Programs","tags":["CS61A","Berkeley","Python"],"createTime":"2024/10/29 11:10:09","permalink":"/cs61a/","description":"提示 目前CS61A已经开始下一个学期（Spring 2025），官方自己的存档需要UCB的账号才能访问，Fall 2024的一个备份可见 hqhq1025 的 CS61A备份网站。 注：此简介搬运自 CS自学指南 课程简介 所属大学：UC Berkeley 先修要求：无 编程语言：Python, Scheme, SQL 课程难度：🌟🌟🌟 预计学...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CS61A: Structure and Interpretation of Computer Programs\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-28T11:44:01.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.ajohn.top/cs61a/"}],["meta",{"property":"og:site_name","content":"AJohn Blog"}],["meta",{"property":"og:title","content":"CS61A: Structure and Interpretation of Computer Programs"}],["meta",{"property":"og:description","content":"提示 目前CS61A已经开始下一个学期（Spring 2025），官方自己的存档需要UCB的账号才能访问，Fall 2024的一个备份可见 hqhq1025 的 CS61A备份网站。 注：此简介搬运自 CS自学指南 课程简介 所属大学：UC Berkeley 先修要求：无 编程语言：Python, Scheme, SQL 课程难度：🌟🌟🌟 预计学..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-28T11:44:01.000Z"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Berkeley"}],["meta",{"property":"article:tag","content":"CS61A"}],["meta",{"property":"article:modified_time","content":"2025-10-28T11:44:01.000Z"}]]},"readingTime":{"minutes":2.89,"words":867},"git":{"createdTime":1731894040000,"updatedTime":1761651841000,"contributors":[{"name":"zzyAJohn","username":"zzyAJohn","email":"1833302139@qq.com","commits":11,"avatar":"https://avatars.githubusercontent.com/zzyAJohn?v=4","url":"https://github.com/zzyAJohn"}]},"autoDesc":true,"filePathRelative":"cs61a/README.md","headers":[]}');export{C as comp,b as data};
