import{_ as a,c as s,e,o as t}from"./app-C1ZOz49-.js";const l={};function n(h,i){return t(),s("div",null,[...i[0]||(i[0]=[e(`<p>我们的第一个 Java 程序。打印 Hello World 非常简单：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> HelloWorld</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello world!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键语法功能。我们的第一个程序揭示了 Java 的几个重要语法特性：</p><ul><li>所有代码都位于一个类中。</li><li>执行的代码位于一个名为 main 的函数（也称为方法）中。</li><li>大括号用于表示一段代码的开头和结尾，例如类或方法声明。语句以分号结尾。</li><li>变量具有声明的类型，也称为它们的 “静态类型”。</li><li>变量必须在使用前声明。</li><li>函数必须具有返回类型。如果一个函数没有返回任何内容，我们使用 void。</li><li>编译器确保类型一致性。如果类型不一致，则程序将不会编译。</li></ul><h3 id="静态类型" tabindex="-1"><a class="header-anchor" href="#静态类型"><span>静态类型</span></a></h3><p>静态类型（在我看来）是 Java 最好的特性之一。与没有静态类型的语言相比，它为我们提供了许多重要优势：</p><ul><li>甚至在程序运行之前就检查类型，使开发人员能够轻松捕获类型错误。</li><li>如果您编写程序并分发编译版本，则（大部分）保证它没有任何类型错误。这使您的代码更加可靠。</li><li>每个变量、参数和函数都有一个声明的类型，使程序员更容易理解和推理代码。静态类型化也有缺点，稍后将讨论。</li></ul><h3 id="编码风格" tabindex="-1"><a class="header-anchor" href="#编码风格"><span>编码风格</span></a></h3><p>编码风格在 CS61B 和现实世界中非常重要。应按照教科书和讲座中的描述对代码进行适当的注释。</p><h3 id="命令行编译和执行" tabindex="-1"><a class="header-anchor" href="#命令行编译和执行"><span>命令行编译和执行</span></a></h3><p>javac 用于编译程序，Java 用于执行程序。我们必须始终在执行之前进行编译。</p>`,11)])])}const p=a(l,[["render",n]]),o=JSON.parse('{"path":"/cs61b/au43rkzc/","title":"1.Intro, Hello World Java","lang":"zh-CN","frontmatter":{"title":"1.Intro, Hello World Java","createTime":"2024/12/11 17:50:58","permalink":"/cs61b/au43rkzc/","description":"我们的第一个 Java 程序。打印 Hello World 非常简单： 关键语法功能。我们的第一个程序揭示了 Java 的几个重要语法特性： 所有代码都位于一个类中。 执行的代码位于一个名为 main 的函数（也称为方法）中。 大括号用于表示一段代码的开头和结尾，例如类或方法声明。语句以分号结尾。 变量具有声明的类型，也称为它们的 “静态类型”。 变量...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.Intro, Hello World Java\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-28T11:44:01.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.ajohn.top/cs61b/au43rkzc/"}],["meta",{"property":"og:site_name","content":"AJohn Blog"}],["meta",{"property":"og:title","content":"1.Intro, Hello World Java"}],["meta",{"property":"og:description","content":"我们的第一个 Java 程序。打印 Hello World 非常简单： 关键语法功能。我们的第一个程序揭示了 Java 的几个重要语法特性： 所有代码都位于一个类中。 执行的代码位于一个名为 main 的函数（也称为方法）中。 大括号用于表示一段代码的开头和结尾，例如类或方法声明。语句以分号结尾。 变量具有声明的类型，也称为它们的 “静态类型”。 变量..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-28T11:44:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-28T11:44:01.000Z"}]]},"readingTime":{"minutes":1.52,"words":456},"git":{"createdTime":1734256743000,"updatedTime":1761651841000,"contributors":[{"name":"zzyAJohn","username":"zzyAJohn","email":"1833302139@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/zzyAJohn?v=4","url":"https://github.com/zzyAJohn"}]},"autoDesc":true,"filePathRelative":"cs61b/1.Intro, Hello World Java.md","headers":[]}');export{p as comp,o as data};
